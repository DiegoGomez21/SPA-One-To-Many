{"ast":null,"code":"export class CommentFormComponent {\n  constructor(commentService, route, formBuilder) {\n    this.commentService = commentService;\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.newComment = {};\n    this.submitted = false;\n    this.tutorialId = this.route.snapshot.params.id;\n    this.commentForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      text: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.getComments();\n  }\n  getComments() {\n    this.commentService.getComments(this.tutorialId).subscribe(data => {\n      this.comments = data;\n    }, error => {\n      console.log(error);\n    });\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.commentForm.invalid) {\n      return;\n    }\n    this.commentService.createComment(this.tutorialId, this.commentForm.value).subscribe(response => {\n      console.log(response);\n      this.commentForm.reset(); // clear the form\n      this.getComments(); // refresh the comment list\n    }, error => {\n      console.log(error);\n    });\n  }\n}","map":{"version":3,"mappings":"AAAA,OAAM,MAAOA,oBAAoB;EAQ/BC,YACUC,cAA8B,EAC9BC,KAAqB,EACrBC,WAAwB;IAFxB,mBAAc,GAAdF,cAAc;IACd,UAAK,GAALC,KAAK;IACL,gBAAW,GAAXC,WAAW;IAPrB,eAAU,GAAQ,EAAE;IACpB,cAAS,GAAG,KAAK;IAQf,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,MAAM,CAACC,EAAE;IAC/C,IAAI,CAACC,WAAW,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACxCC,IAAI,EAAE,CAAC,EAAE,EAAEC,UAAU,CAACC,QAAQ,CAAC;MAC/BC,IAAI,EAAE,CAAC,EAAE,EAAEF,UAAU,CAACC,QAAQ;KAC/B,CAAC;EACJ;EAEAE,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAW;IACT,IAAI,CAACd,cAAc,CAACc,WAAW,CAAC,IAAI,CAACX,UAAU,CAAC,CAC7CY,SAAS,CACRC,IAAI,IAAG;MACL,IAAI,CAACC,QAAQ,GAAGD,IAAI;IACtB,CAAC,EACDE,KAAK,IAAG;MACNC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACR;EAEAG,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB,IAAI,IAAI,CAACf,WAAW,CAACgB,OAAO,EAAE;MAC5B;;IAGF,IAAI,CAACvB,cAAc,CAACwB,aAAa,CAAC,IAAI,CAACrB,UAAU,EAAE,IAAI,CAACI,WAAW,CAACkB,KAAK,CAAC,CACvEV,SAAS,CACRW,QAAQ,IAAG;MACTP,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC;MACrB,IAAI,CAACnB,WAAW,CAACoB,KAAK,EAAE,CAAC,CAAC;MAC1B,IAAI,CAACb,WAAW,EAAE,CAAC,CAAC;IACtB,CAAC,EACDI,KAAK,IAAG;MACNC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACR","names":["CommentFormComponent","constructor","commentService","route","formBuilder","tutorialId","snapshot","params","id","commentForm","group","name","Validators","required","text","ngOnInit","getComments","subscribe","data","comments","error","console","log","onSubmit","submitted","invalid","createComment","value","response","reset"],"sourceRoot":"","sources":["C:\\Users\\Diego Gomez\\Desktop\\Proyecto-SPA-Angular\\Angular13Crud\\src\\app\\comment-form\\comment-form.component.ts"],"sourcesContent":["export class CommentFormComponent implements OnInit {\n\n  tutorialId: string;\n  comments: any;\n  newComment: any = {};\n  submitted = false;\n  commentForm!: FormGroup;\n\n  constructor(\n    private commentService: CommentService,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder\n  ) {\n    this.tutorialId = this.route.snapshot.params.id;\n    this.commentForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      text: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    this.getComments();\n  }\n\n  getComments() {\n    this.commentService.getComments(this.tutorialId)\n      .subscribe(\n        data => {\n          this.comments = data;\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.commentForm.invalid) {\n      return;\n    }\n\n    this.commentService.createComment(this.tutorialId, this.commentForm.value)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.commentForm.reset(); // clear the form\n          this.getComments(); // refresh the comment list\n        },\n        error => {\n          console.log(error);\n        });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}