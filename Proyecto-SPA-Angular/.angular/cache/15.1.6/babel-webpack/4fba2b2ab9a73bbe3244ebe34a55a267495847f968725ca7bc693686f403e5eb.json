{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/tutorial.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction TutorialDetailsComponent_div_0_li_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const comment_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", comment_r3.content, \" \");\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/tutorials\", a1, \"edit\"];\n};\nfunction TutorialDetailsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h4\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\")(6, \"strong\");\n    i0.ɵɵtext(7, \"Status:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"a\", 1);\n    i0.ɵɵtext(10, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"br\")(12, \"br\");\n    i0.ɵɵelementStart(13, \"form\", 2, 3);\n    i0.ɵɵlistener(\"ngSubmit\", function TutorialDetailsComponent_div_0_Template_form_ngSubmit_13_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.submitComment());\n    });\n    i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 5);\n    i0.ɵɵtext(17, \"Comment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"textarea\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function TutorialDetailsComponent_div_0_Template_textarea_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.comment = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"button\", 7);\n    i0.ɵɵtext(20, \"Add Comment\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(21, \"hr\");\n    i0.ɵɵelementStart(22, \"h4\");\n    i0.ɵɵtext(23, \"Comments\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"ul\");\n    i0.ɵɵtemplate(25, TutorialDetailsComponent_div_0_li_25_Template, 2, 1, \"li\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.currentTutorial.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.currentTutorial.description);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.currentTutorial.published ? \"Published\" : \"Pending\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(6, _c0, ctx_r0.currentTutorial.id));\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.comment);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.comments);\n  }\n}\nexport class TutorialDetailsComponent {\n  constructor(tutorialService, route, router) {\n    this.tutorialService = tutorialService;\n    this.route = route;\n    this.router = router;\n    this.viewMode = false;\n    this.currentTutorial = {\n      title: '',\n      description: '',\n      published: false\n    };\n    this.message = '';\n  }\n  ngOnInit() {\n    if (!this.viewMode) {\n      this.message = '';\n      this.getTutorial(this.route.snapshot.params[\"id\"]);\n    }\n  }\n  getTutorial(id) {\n    this.tutorialService.get(id).subscribe({\n      next: data => {\n        this.currentTutorial = data;\n        console.log(data);\n      },\n      error: e => console.error(e)\n    });\n  }\n  updatePublished(status) {\n    const data = {\n      title: this.currentTutorial.title,\n      description: this.currentTutorial.description,\n      published: status\n    };\n    this.message = '';\n    this.tutorialService.update(this.currentTutorial.id, data).subscribe({\n      next: res => {\n        console.log(res);\n        this.currentTutorial.published = status;\n        this.message = res.message ? res.message : 'The status was updated successfully!';\n      },\n      error: e => console.error(e)\n    });\n  }\n  updateTutorial() {\n    this.message = '';\n    this.tutorialService.update(this.currentTutorial.id, this.currentTutorial).subscribe({\n      next: res => {\n        console.log(res);\n        this.message = res.message ? res.message : 'This tutorial was updated successfully!';\n      },\n      error: e => console.error(e)\n    });\n  }\n  deleteTutorial() {\n    this.tutorialService.delete(this.currentTutorial.id).subscribe({\n      next: res => {\n        console.log(res);\n        this.router.navigate(['/tutorials']);\n      },\n      error: e => console.error(e)\n    });\n  }\n}\nTutorialDetailsComponent.ɵfac = function TutorialDetailsComponent_Factory(t) {\n  return new (t || TutorialDetailsComponent)(i0.ɵɵdirectiveInject(i1.TutorialService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nTutorialDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TutorialDetailsComponent,\n  selectors: [[\"app-tutorial-details\"]],\n  inputs: {\n    viewMode: \"viewMode\",\n    currentTutorial: \"currentTutorial\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [3, \"routerLink\"], [3, \"ngSubmit\"], [\"commentForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"comment\"], [\"name\", \"comment\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function TutorialDetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TutorialDetailsComponent_div_0_Template, 26, 8, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.viewMode);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\".edit-form[_ngcontent-%COMP%] {\\r\\n  max-width: 400px;\\r\\n  margin: auto;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90dXRvcmlhbC1kZXRhaWxzL3R1dG9yaWFsLWRldGFpbHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixZQUFZO0FBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyIuZWRpdC1mb3JtIHtcclxuICBtYXgtd2lkdGg6IDQwMHB4O1xyXG4gIG1hcmdpbjogYXV0bztcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","TutorialDetailsComponent","constructor","tutorialService","route","router","title","description","published","ngOnInit","viewMode","message","getTutorial","snapshot","params","id","get","subscribe","next","data","currentTutorial","console","log","error","e","updatePublished","status","update","res","updateTutorial","deleteTutorial","delete","navigate","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Diego Gomez\\Desktop\\SPA\\Proyecto-SPA-Angular\\Angular13Crud\\src\\app\\components\\tutorial-details\\tutorial-details.component.html","C:\\Users\\Diego Gomez\\Desktop\\SPA\\Proyecto-SPA-Angular\\Angular13Crud\\src\\app\\components\\tutorial-details\\tutorial-details.component.ts"],"sourcesContent":["<div *ngIf=\"viewMode\">\n  <h4>{{ currentTutorial.title }}</h4>\n\n  <p>{{ currentTutorial.description }}</p>\n\n  <p>\n    <strong>Status:</strong> {{ currentTutorial.published ? \"Published\" : \"Pending\" }}\n  </p>\n\n  <a [routerLink]=\"['/tutorials', currentTutorial.id, 'edit']\">Edit</a>\n  <br />\n  <br />\n  <form (ngSubmit)=\"submitComment()\" #commentForm=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"comment\">Comment</label>\n      <textarea class=\"form-control\" name=\"comment\" [(ngModel)]=\"comment\" required></textarea>\n    </div>\n    <button class=\"btn btn-primary\">Add Comment</button>\n  </form>\n  <hr />\n  <h4>Comments</h4>\n  <ul>\n    <li *ngFor=\"let comment of comments\">\n      {{ comment.content }}\n    </li>\n  </ul>\n</div>\n\n\n<!-- <div *ngIf=\"viewMode; else editable\">\n    <div *ngIf=\"currentTutorial.id\">\n      <h4>Tutorial</h4>\n      <div>\n        <label><strong>Title:</strong></label> {{ currentTutorial.title }}\n      </div>\n      <div>\n        <label><strong>Description:</strong></label>\n        {{ currentTutorial.description }}\n      </div>\n      <div>\n        <label><strong>Status:</strong></label>\n        {{ currentTutorial.published ? \"Published\" : \"Pending\" }}\n      </div>\n  \n      <a\n        class=\"badge badge-warning\"\n        routerLink=\"/tutorials/{{ currentTutorial.id }}\"\n      >\n        Edit\n      </a>\n    </div>\n  \n    <div *ngIf=\"!currentTutorial\">\n      <br />\n      <p>Please click on a Tutorial...</p>\n    </div>\n  </div>\n  \n  <ng-template #editable>\n    <div *ngIf=\"currentTutorial.id\" class=\"edit-form\">\n      <h4>Tutorial</h4>\n      <form>\n        <div class=\"form-group\">\n          <label for=\"title\">Title</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"title\"\n            [(ngModel)]=\"currentTutorial.title\"\n            name=\"title\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"description\">Description</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"description\"\n            [(ngModel)]=\"currentTutorial.description\"\n            name=\"description\"\n          />\n        </div>\n  \n        <div class=\"form-group\">\n          <label><strong>Status:</strong></label>\n          {{ currentTutorial.published ? \"Published\" : \"Pending\" }}\n        </div>\n      </form>\n  \n      <button\n        class=\"badge badge-primary mr-2\"\n        *ngIf=\"currentTutorial.published\"\n        (click)=\"updatePublished(false)\"\n      >\n        UnPublish\n      </button>\n      <button\n        *ngIf=\"!currentTutorial.published\"\n        class=\"badge badge-primary mr-2\"\n        (click)=\"updatePublished(true)\"\n      >\n        Publish\n      </button>\n  \n      <button class=\"badge badge-danger mr-2\" (click)=\"deleteTutorial()\">\n        Delete\n      </button>\n  \n      <button\n        type=\"submit\"\n        class=\"badge badge-success mb-2\"\n        (click)=\"updateTutorial()\"\n      >\n        Update\n      </button>\n      <p>{{ message }}</p>\n    </div>\n  \n    <div *ngIf=\"!currentTutorial.id\">\n      <br />\n      <p>Cannot access this Tutorial...</p>\n    </div>\n  </ng-template> -->","import { Component, Input, OnInit } from '@angular/core';\nimport { TutorialService } from 'src/app/services/tutorial.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Tutorial } from 'src/app/models/tutorial.model';\n\n@Component({\n  selector: 'app-tutorial-details',\n  templateUrl: './tutorial-details.component.html',\n  styleUrls: ['./tutorial-details.component.css']\n})\nexport class TutorialDetailsComponent implements OnInit {\n\n  @Input() viewMode = false;\n\n  @Input() currentTutorial: Tutorial = {\n    title: '',\n    description: '',\n    published: false\n  };\n  \n  message = '';\n\n  constructor(\n    private tutorialService: TutorialService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    if (!this.viewMode) {\n      this.message = '';\n      this.getTutorial(this.route.snapshot.params[\"id\"]);\n    }\n  }\n\n  getTutorial(id: string): void {\n    this.tutorialService.get(id)\n      .subscribe({\n        next: (data) => {\n          this.currentTutorial = data;\n          console.log(data);\n        },\n        error: (e) => console.error(e)\n      });\n  }\n\n  updatePublished(status: boolean): void {\n    const data = {\n      title: this.currentTutorial.title,\n      description: this.currentTutorial.description,\n      published: status\n    };\n\n    this.message = '';\n\n    this.tutorialService.update(this.currentTutorial.id, data)\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.currentTutorial.published = status;\n          this.message = res.message ? res.message : 'The status was updated successfully!';\n        },\n        error: (e) => console.error(e)\n      });\n  }\n\n  updateTutorial(): void {\n    this.message = '';\n\n    this.tutorialService.update(this.currentTutorial.id, this.currentTutorial)\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.message = res.message ? res.message : 'This tutorial was updated successfully!';\n        },\n        error: (e) => console.error(e)\n      });\n  }\n\n  deleteTutorial(): void {\n    this.tutorialService.delete(this.currentTutorial.id)\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.router.navigate(['/tutorials']);\n        },\n        error: (e) => console.error(e)\n      });\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}