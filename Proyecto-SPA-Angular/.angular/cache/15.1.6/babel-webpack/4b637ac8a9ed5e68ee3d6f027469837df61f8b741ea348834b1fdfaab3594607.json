{"ast":null,"code":"import { __decorate } from \"tslib\";\nexport class TutorialDetailsComponent {\n  constructor(tutorialService, route) {\n    this.tutorialService = tutorialService;\n    this.route = route;\n    this.viewMode = false;\n    this.currentTutorial = {\n      title: '',\n      description: '',\n      published: false\n    };\n    this.comments = [];\n    this.comment = '';\n  }\n  ngOnInit() {\n    this.retrieveComments();\n  }\n  submitComment() {\n    const data = {\n      content: this.comment,\n      tutorialId: this.currentTutorial.id\n    };\n    this.tutorialService.createComment(data).subscribe(response => {\n      this.comment = '';\n      this.retrieveComments();\n    }, error => {\n      console.log(error);\n    });\n  }\n  retrieveComments() {\n    this.tutorialService.getComments(this.currentTutorial.id).subscribe(data => {\n      this.comments = data;\n    }, error => {\n      console.log(error);\n    });\n  }\n}\n__decorate([Input()], TutorialDetailsComponent.prototype, \"viewMode\", void 0);\n__decorate([Input()], TutorialDetailsComponent.prototype, \"currentTutorial\", void 0);\n// import { Component, Input, OnInit } from '@angular/core';\n// import { TutorialService } from 'src/app/services/tutorial.service';\n// import { ActivatedRoute, Router } from '@angular/router';\n// import { Tutorial } from 'src/app/models/tutorial.model';\n// @Component({\n//   selector: 'app-tutorial-details',\n//   templateUrl: './tutorial-details.component.html',\n//   styleUrls: ['./tutorial-details.component.css']\n// })\n// export class TutorialDetailsComponent implements OnInit {\n//   @Input() viewMode = false;\n//   @Input() currentTutorial: Tutorial = {\n//     title: '',\n//     description: '',\n//     published: false\n//   };\n//   message = '';\n//   constructor(\n//     private tutorialService: TutorialService,\n//     private route: ActivatedRoute,\n//     private router: Router) { }\n//   ngOnInit(): void {\n//     if (!this.viewMode) {\n//       this.message = '';\n//       this.getTutorial(this.route.snapshot.params[\"id\"]);\n//     }\n//   }\n//   getTutorial(id: string): void {\n//     this.tutorialService.get(id)\n//       .subscribe({\n//         next: (data) => {\n//           this.currentTutorial = data;\n//           console.log(data);\n//         },\n//         error: (e) => console.error(e)\n//       });\n//   }\n//   updatePublished(status: boolean): void {\n//     const data = {\n//       title: this.currentTutorial.title,\n//       description: this.currentTutorial.description,\n//       published: status\n//     };\n//     this.message = '';\n//     this.tutorialService.update(this.currentTutorial.id, data)\n//       .subscribe({\n//         next: (res) => {\n//           console.log(res);\n//           this.currentTutorial.published = status;\n//           this.message = res.message ? res.message : 'The status was updated successfully!';\n//         },\n//         error: (e) => console.error(e)\n//       });\n//   }\n//   updateTutorial(): void {\n//     this.message = '';\n//     this.tutorialService.update(this.currentTutorial.id, this.currentTutorial)\n//       .subscribe({\n//         next: (res) => {\n//           console.log(res);\n//           this.message = res.message ? res.message : 'This tutorial was updated successfully!';\n//         },\n//         error: (e) => console.error(e)\n//       });\n//   }\n//   deleteTutorial(): void {\n//     this.tutorialService.delete(this.currentTutorial.id)\n//       .subscribe({\n//         next: (res) => {\n//           console.log(res);\n//           this.router.navigate(['/tutorials']);\n//         },\n//         error: (e) => console.error(e)\n//       });\n//   }\n// }","map":{"version":3,"mappings":";AAAA,OAAM,MAAOA,wBAAwB;EAcnCC,YAAoBC,eAAgC,EAAUC,KAAqB;IAA/D,oBAAe,GAAfD,eAAe;IAA2B,UAAK,GAALC,KAAK;IAZ1D,aAAQ,GAAG,KAAK;IAEhB,oBAAe,GAAa;MACnCC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE;KACZ;IAED,aAAQ,GAAc,EAAE;IAExB,YAAO,GAAW,EAAE;EAEmE;EAEvFC,QAAQ;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAC,aAAa;IACX,MAAMC,IAAI,GAAG;MACXC,OAAO,EAAE,IAAI,CAACC,OAAO;MACrBC,UAAU,EAAE,IAAI,CAACC,eAAe,CAACC;KAClC;IAED,IAAI,CAACb,eAAe,CAACc,aAAa,CAACN,IAAI,CAAC,CACrCO,SAAS,CACRC,QAAQ,IAAG;MACT,IAAI,CAACN,OAAO,GAAG,EAAE;MACjB,IAAI,CAACJ,gBAAgB,EAAE;IACzB,CAAC,EACDW,KAAK,IAAG;MACNC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACR;EAEAX,gBAAgB;IACd,IAAI,CAACN,eAAe,CAACoB,WAAW,CAAC,IAAI,CAACR,eAAe,CAACC,EAAE,CAAC,CACtDE,SAAS,CACRP,IAAI,IAAG;MACL,IAAI,CAACa,QAAQ,GAAGb,IAAI;IACtB,CAAC,EACDS,KAAK,IAAG;MACNC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACR;;AA5CSK,YAARC,KAAK,EAAE,0DAAkB;AAEjBD,YAARC,KAAK,EAAE,iEAIN;AAyCJ;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","names":["TutorialDetailsComponent","constructor","tutorialService","route","title","description","published","ngOnInit","retrieveComments","submitComment","data","content","comment","tutorialId","currentTutorial","id","createComment","subscribe","response","error","console","log","getComments","comments","__decorate","Input"],"sourceRoot":"","sources":["C:\\Users\\Diego Gomez\\Desktop\\SPA\\Proyecto-SPA-Angular\\Angular13Crud\\src\\app\\components\\tutorial-details\\tutorial-details.component.ts"],"sourcesContent":["export class TutorialDetailsComponent implements OnInit {\n\n  @Input() viewMode = false;\n\n  @Input() currentTutorial: Tutorial = {\n    title: '',\n    description: '',\n    published: false\n  };\n\n  comments: Comment[] = [];\n\n  comment: string = '';\n\n  constructor(private tutorialService: TutorialService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.retrieveComments();\n  }\n\n  submitComment(): void {\n    const data = {\n      content: this.comment,\n      tutorialId: this.currentTutorial.id\n    };\n\n    this.tutorialService.createComment(data)\n      .subscribe(\n        response => {\n          this.comment = '';\n          this.retrieveComments();\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  retrieveComments(): void {\n    this.tutorialService.getComments(this.currentTutorial.id)\n      .subscribe(\n        data => {\n          this.comments = data;\n        },\n        error => {\n          console.log(error);\n        });\n  }\n}\n\n// import { Component, Input, OnInit } from '@angular/core';\n// import { TutorialService } from 'src/app/services/tutorial.service';\n// import { ActivatedRoute, Router } from '@angular/router';\n// import { Tutorial } from 'src/app/models/tutorial.model';\n\n// @Component({\n//   selector: 'app-tutorial-details',\n//   templateUrl: './tutorial-details.component.html',\n//   styleUrls: ['./tutorial-details.component.css']\n// })\n// export class TutorialDetailsComponent implements OnInit {\n\n//   @Input() viewMode = false;\n\n//   @Input() currentTutorial: Tutorial = {\n//     title: '',\n//     description: '',\n//     published: false\n//   };\n  \n//   message = '';\n\n//   constructor(\n//     private tutorialService: TutorialService,\n//     private route: ActivatedRoute,\n//     private router: Router) { }\n\n//   ngOnInit(): void {\n//     if (!this.viewMode) {\n//       this.message = '';\n//       this.getTutorial(this.route.snapshot.params[\"id\"]);\n//     }\n//   }\n\n//   getTutorial(id: string): void {\n//     this.tutorialService.get(id)\n//       .subscribe({\n//         next: (data) => {\n//           this.currentTutorial = data;\n//           console.log(data);\n//         },\n//         error: (e) => console.error(e)\n//       });\n//   }\n\n//   updatePublished(status: boolean): void {\n//     const data = {\n//       title: this.currentTutorial.title,\n//       description: this.currentTutorial.description,\n//       published: status\n//     };\n\n//     this.message = '';\n\n//     this.tutorialService.update(this.currentTutorial.id, data)\n//       .subscribe({\n//         next: (res) => {\n//           console.log(res);\n//           this.currentTutorial.published = status;\n//           this.message = res.message ? res.message : 'The status was updated successfully!';\n//         },\n//         error: (e) => console.error(e)\n//       });\n//   }\n\n//   updateTutorial(): void {\n//     this.message = '';\n\n//     this.tutorialService.update(this.currentTutorial.id, this.currentTutorial)\n//       .subscribe({\n//         next: (res) => {\n//           console.log(res);\n//           this.message = res.message ? res.message : 'This tutorial was updated successfully!';\n//         },\n//         error: (e) => console.error(e)\n//       });\n//   }\n\n//   deleteTutorial(): void {\n//     this.tutorialService.delete(this.currentTutorial.id)\n//       .subscribe({\n//         next: (res) => {\n//           console.log(res);\n//           this.router.navigate(['/tutorials']);\n//         },\n//         error: (e) => console.error(e)\n//       });\n//   }\n\n// }"]},"metadata":{},"sourceType":"module","externalDependencies":[]}