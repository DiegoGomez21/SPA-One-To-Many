{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/comment.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class CommentFormComponent {\n  constructor(commentService, route, formBuilder) {\n    this.commentService = commentService;\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.tutorialId = this.route.snapshot.params[\"id\"];\n  }\n  ngOnInit() {\n    this.getComments();\n    this.createForm();\n  }\n  createForm() {\n    this.commentForm = this.formBuilder.group({\n      content: ['', Validators.required]\n    });\n  }\n  getComments() {\n    this.commentService.getComments(this.tutorialId).subscribe(data => {\n      this.comments = data;\n      console.log(data);\n    }, error => {\n      console.log(error);\n    });\n  }\n  submitComment() {\n    this.commentService.createComment(this.tutorialId, this.newComment.value).subscribe(response => {\n      console.log(response);\n      this.submitted = true;\n    }, error => {\n      console.log(error);\n    });\n  }\n  onSubmit() {\n    this.commentService.createComment(this.tutorialId, this.commentForm.value).subscribe(response => {\n      console.log(response);\n      this.commentForm.reset(); // clear the form\n      this.getComments(); // refresh the comment list\n    }, error => {\n      console.log(error);\n    });\n  }\n}\nCommentFormComponent.ɵfac = function CommentFormComponent_Factory(t) {\n  return new (t || CommentFormComponent)(i0.ɵɵdirectiveInject(i1.CommentService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nCommentFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CommentFormComponent,\n  selectors: [[\"app-comment-form\"]],\n  decls: 7,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"content\"], [\"formControlName\", \"content\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function CommentFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function CommentFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submitComment();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"textarea\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function CommentFormComponent_Template_textarea_ngModelChange_4_listener($event) {\n        return ctx.newComment.content = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"button\", 4);\n      i0.ɵɵtext(6, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.commentForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newComment.content);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAQnE,OAAM,MAAOC,oBAAoB;EAO/BC,YACUC,cAA8B,EAC9BC,KAAqB,EACrBC,WAAwB;IAFxB,mBAAc,GAAdF,cAAc;IACd,UAAK,GAALC,KAAK;IACL,gBAAW,GAAXC,WAAW;IAEnB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;EACpD;EAEAC,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAU;IACR,IAAI,CAACC,WAAW,GAAG,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC;MACxCC,OAAO,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACe,QAAQ;KAClC,CAAC;EACJ;EAEAL,WAAW;IACT,IAAI,CAACP,cAAc,CAACO,WAAW,CAAC,IAAI,CAACJ,UAAU,CAAC,CAC7CU,SAAS,CACRC,IAAI,IAAG;MACL,IAAI,CAACC,QAAQ,GAAGD,IAAI;MACpBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB,CAAC,EACDI,KAAK,IAAG;MACNF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB,CAAC,CAAC;EACR;EAEAC,aAAa;IACX,IAAI,CAACnB,cAAc,CAACoB,aAAa,CAAC,IAAI,CAACjB,UAAU,EAAE,IAAI,CAACkB,UAAU,CAACC,KAAK,CAAC,CACtET,SAAS,CACRU,QAAQ,IAAG;MACTP,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC;MACrB,IAAI,CAACC,SAAS,GAAG,IAAI;IACvB,CAAC,EACDN,KAAK,IAAG;MACNF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB,CAAC,CAAC;EAER;EAEAO,QAAQ;IACN,IAAI,CAACzB,cAAc,CAACoB,aAAa,CAAC,IAAI,CAACjB,UAAU,EAAE,IAAI,CAACM,WAAW,CAACa,KAAK,CAAC,CACvET,SAAS,CACRU,QAAQ,IAAG;MACTP,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC;MACrB,IAAI,CAACd,WAAW,CAACiB,KAAK,EAAE,CAAC,CAAC;MAC1B,IAAI,CAACnB,WAAW,EAAE,CAAC,CAAC;IACtB,CAAC,EACDW,KAAK,IAAG;MACNF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB,CAAC,CAAC;EACR;;AA9DWpB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAA6B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXjCC,+BAA6D;MAA7BA;QAAA,OAAYC,mBAAe;MAAA,EAAC;MAC1DD,8BAAwB;MACDA,uBAAO;MAAAA,iBAAQ;MACpCA,mCAA0F;MAAjCA;QAAA;MAAA,EAAgC;MAACA,iBAAW;MAGvGA,iCAA8C;MAAAA,sBAAM;MAAAA,iBAAS;;;MANzDA,2CAAyB;MAG8BA,eAAgC;MAAhCA,gDAAgC","names":["Validators","CommentFormComponent","constructor","commentService","route","formBuilder","tutorialId","snapshot","params","ngOnInit","getComments","createForm","commentForm","group","content","required","subscribe","data","comments","console","log","error","submitComment","createComment","newComment","value","response","submitted","onSubmit","reset","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Diego Gomez\\Desktop\\Proyecto-SPA-Angular\\Angular13Crud\\src\\app\\comment-form\\comment-form.component.ts","C:\\Users\\Diego Gomez\\Desktop\\Proyecto-SPA-Angular\\Angular13Crud\\src\\app\\comment-form\\comment-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommentService } from '../services/comment.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-comment-form',\n  templateUrl: './comment-form.component.html',\n  styleUrls: ['./comment-form.component.css']\n})\n\nexport class CommentFormComponent implements OnInit {\n  tutorialId: string;\n  comments: any;\n  newComment: any\n  submitted!: boolean;\n  commentForm!: FormGroup;\n  \n  constructor(\n    private commentService: CommentService,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder\n  ) {\n    this.tutorialId = this.route.snapshot.params[\"id\"];\n  }\n  \n  ngOnInit(): void {\n    this.getComments();\n    this.createForm();\n  }\n  \n  createForm() {\n    this.commentForm = this.formBuilder.group({\n      content: ['', Validators.required]\n    });\n  }\n\n  getComments() {\n    this.commentService.getComments(this.tutorialId)\n      .subscribe(\n        data => {\n          this.comments = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  submitComment() {\n    this.commentService.createComment(this.tutorialId, this.newComment.value)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.submitted = true;\n        },\n        error => {\n          console.log(error);\n        });\n\n  }\n  \n  onSubmit() {\n    this.commentService.createComment(this.tutorialId, this.commentForm.value)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.commentForm.reset(); // clear the form\n          this.getComments(); // refresh the comment list\n        },\n        error => {\n          console.log(error);\n        });\n  }\n}\n","<form [formGroup]=\"commentForm\" (ngSubmit)=\"submitComment()\">\n  <div class=\"form-group\">\n    <label for=\"content\">Content</label>\n    <textarea class=\"form-control\" formControlName=\"content\" [(ngModel)]=\"newComment.content\"></textarea>\n  </div>\n  \n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}